C51 COMPILER V9.00   SYSTEM                                                                11/10/2013 09:56:49 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN .\Output\system.obj
COMPILER INVOKED BY: D:\Program Files\kell\C51\BIN\C51.EXE Code\system.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\Output\
                    -system.lst) OBJECT(.\Output\system.obj)

line level    source

   1          #include "system.h"
   2          #include "stc15.h"
   3          #include <intrins.h>
   4          
   5          // 软件延时
   6          void delay(uint16 n)
   7          {
   8   1              uint16 x;
   9   1              
  10   1              while(n--)
  11   1              {
  12   2                      x = 5000;
  13   2                      while(x--);
  14   2              }
  15   1      }
  16          
  17          //////////////////////////////////////////////////////////////
  18          //  串口
  19          
  20          // 初始化串口
  21          void initUart()
  22          {
  23   1              SCON = 0x5a;       // 设置串口为 8 位可变波特率
  24   1        #if URMD == 0
  25   1        T2L = 0xd8;        // 设置波特率重装值
  26   1              T2H = 0xff;        // 115200 bps(65536-1843200/4/115200)
  27   1              AUXR |= 0x14;       // T2 为 1T 模式，并启动定时器 2
  28   1              AUXR |= 0x01;      // 选择定时器 2 为串口 1 的波特率发生器
  29   1              #elif URMD == 1
                      AUXR = 0x40;       // 定时器 1 为 1T 模式
                      TMOD = 0x00;       // 定时器 1 为 模式 0 （16 位自动重载）
                      TL1 = 0xd8;        // 设置波特率重装值
                      TH1 = 0xff;        // 115200 bps(65536-18432000/4/115200)
                      TR1 = 1;           // 定时器 1 开始启动
                      #else
                      TMOD = 0x20;       // 设置定时器 1 为 8 位自动重装模式
                      AUXR = 0x40;       // 定时器 1 为 1T 模式
                      TH1 = TL1 = 0xfb;  // 115200 bps(256-1843200/32/115200)
                      #endif
  40   1      }
  41                  
  42          // 发送串口数据
  43          void sendData(uint8 dat)
  44          {
  45   1              while(!TI);        // 等待前一个数据发送完成
  46   1              TI = 0;            // 清除发送标志
  47   1              SBUF = dat;        // 发送当前数据
  48   1      }
  49          
  50          
  51          
  52          //////////////////////////////////////////////////////////////
  53          //  ADC
  54          
C51 COMPILER V9.00   SYSTEM                                                                11/10/2013 09:56:49 PAGE 2   

  55          /*Define ADC operation const for ADC_CONTR*/
  56          #define ADC_POWER 0x80 //ADC power control bit
  57          #define ADC_FLAG 0x10 //ADC complete flag
  58          #define ADC_START 0x08 //ADC start control bit
  59          #define ADC_SPEEDLL 0x00 //540 clocks
  60          #define ADC_SPEEDL 0x20 //360 clocks
  61          #define ADC_SPEEDH 0x40 //180 clocks
  62          #define ADC_SPEEDHH 0x60 //90 clocks
  63          
  64          // 初始化 ADC
  65          void initADC()
  66          {
  67   1              P1ASF = 0xff;      // 设置 P1 口为 AD 口
  68   1              ADC_RES = 0;       // 清除结果寄存器
  69   1              ADC_CONTR = ADC_POWER | ADC_SPEEDLL;
  70   1              delay(2);          // ADC 上电并延时
  71   1      }
  72          
  73          // 读取 ADC 结果
  74          uint8 getADCResult(uint8 ch)
  75          {
  76   1              ADC_CONTR = ADC_POWER | ADC_SPEEDLL | ch | ADC_START;
  77   1              _nop_();
  78   1              _nop_();
  79   1              _nop_();
  80   1              _nop_();
  81   1              while(!(ADC_CONTR & ADC_FLAG));   // 等待 ADC 转换完成
  82   1              ADC_CONTR &= ~ADC_FLAG;           // 关闭 ADC
  83   1              
  84   1              return ADC_RES;                   // 返回 ADC 结果
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     86    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
